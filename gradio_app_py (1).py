# -*- coding: utf-8 -*-
"""gradio_app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12g5EZ7C_nwjas7jpaa1RG-0N9BILKTnT
"""

import fitz  # PyMuPDF
import spacy
from transformers import pipeline
import gradio as gr

# تحميل Spacy
nlp = spacy.load("en_core_web_sm")

# تحميل موديل التلخيص
summarizer = pipeline("summarization", model="t5-large")

# دالة التلخيص
def summarize_text(text, max_length=150):
    words = text.split()
    chunks = [" ".join(words[i:i + 512]) for i in range(0, len(words), 512)]
    summaries = [summarizer(chunk, max_length=max_length, min_length=50, do_sample=False)[0]['summary_text'] for chunk in chunks]
    return " ".join(summaries)

# دالة استخراج PICO
def extract_pico_highlights(text):
    text = text.replace('\n', ' ')
    doc = nlp(text)
    sentences = [sent.text.strip() for sent in doc.sents if len(sent.text.strip()) > 40]

    pico = {"Participants": [], "Intervention": [], "Comparison": [], "Outcome": []}
    for sentence in sentences:
        sent_lower = sentence.lower()
        if any(w in sent_lower for w in ["participants", "patients", "subjects"]):
            pico["Participants"].append(sentence)
        elif any(w in sent_lower for w in ["intervention", "treatment", "therapy", "method"]):
            pico["Intervention"].append(sentence)
        elif any(w in sent_lower for w in ["comparison", "control", "versus", "placebo"]):
            pico["Comparison"].append(sentence)
        elif any(w in sent_lower for w in ["outcome", "result", "effectiveness", "impact"]):
            pico["Outcome"].append(sentence)

    return pico

# قراءة النص من PDF باستخدام المسار
def process_pdf(file_obj):
    doc = fitz.open(file_obj.name)
    return "\n".join([page.get_text("text") for page in doc])

# الدالة الأساسية
def summarize_and_extract(pdf_file):
    try:
        pdf_text = process_pdf(pdf_file)
        summary = summarize_text(pdf_text)
        pico = extract_pico_highlights(pdf_text)
        return summary, pico
    except Exception as e:
        import traceback
        traceback.print_exc()
        return f"Error: {str(e)}", {}

# Gradio UI
interface = gr.Interface(
    fn=summarize_and_extract,
    inputs=gr.File(label="Upload PDF File"),
    outputs=[
        gr.Textbox(label="Summary", lines=10),
        gr.JSON(label="PICO Elements")
    ],
    title="Medical PDF Summarizer and PICO Extractor",
    description="ارفع ملف PDF طبي وراح نلخصه ونستخرج عناصر PICO."
)

# تشغيل الواجهة
interface.launch()

# تأكد من تثبيت المكتبات المطلوبة أولًا في Google Colab:
!pip install spacy
!python -m spacy download en_core_web_sm
!pip install transformers
!pip install pymupdf
!pip install gradio

import fitz  # PyMuPDF
import spacy
from transformers import pipeline
import gradio as gr

# تحميل Spacy
try:
    nlp = spacy.load("en_core_web_sm")
except Exception as e:
    print("Error loading Spacy model:", e)
    nlp = None

# تحميل موديل التلخيص
try:
    summarizer = pipeline("summarization", model="t5-large")
except Exception as e:
    print("Error loading T5 model:", e)
    summarizer = None

# دالة التلخيص
def summarize_text(text, max_length=150):
    if not summarizer:
        return "Error: Summarizer model is not loaded."

    words = text.split()
    chunks = [" ".join(words[i:i + 512]) for i in range(0, len(words), 512)]
    summaries = [summarizer(chunk, max_length=max_length, min_length=50, do_sample=False)[0]['summary_text'] for chunk in chunks]
    return " ".join(summaries)

# دالة استخراج PICO
def extract_pico_highlights(text):
    if not nlp:
        return "Error: Spacy model is not loaded."

    text = text.replace('\n', ' ')
    doc = nlp(text)
    sentences = [sent.text.strip() for sent in doc.sents if len(sent.text.strip()) > 40]

    pico = {"Participants": [], "Intervention": [], "Comparison": [], "Outcome": []}
    for sentence in sentences:
        sent_lower = sentence.lower()
        if any(w in sent_lower for w in ["participants", "patients", "subjects"]):
            pico["Participants"].append(sentence)
        elif any(w in sent_lower for w in ["intervention", "treatment", "therapy", "method"]):
            pico["Intervention"].append(sentence)
        elif any(w in sent_lower for w in ["comparison", "control", "versus", "placebo"]):
            pico["Comparison"].append(sentence)
        elif any(w in sent_lower for w in ["outcome", "result", "effectiveness", "impact"]):
            pico["Outcome"].append(sentence)

    return pico

# قراءة النص من PDF باستخدام المسار
def process_pdf(file_obj):
    try:
        doc = fitz.open(file_obj.name)
        return "\n".join([page.get_text("text") for page in doc])
    except Exception as e:
        print(f"Error reading PDF: {e}")
        return ""

# الدالة الأساسية
def summarize_and_extract(pdf_file):
    try:
        pdf_text = process_pdf(pdf_file)
        if not pdf_text:
            return "Error: Unable to extract text from PDF.", {}

        summary = summarize_text(pdf_text)
        pico = extract_pico_highlights(pdf_text)
        return summary, pico
    except Exception as e:
        import traceback
        traceback.print_exc()
        return f"Error: {str(e)}", {}

# Gradio UI
interface = gr.Interface(
    fn=summarize_and_extract,
    inputs=gr.File(label="Upload PDF File"),
    outputs=[
        gr.Textbox(label="Summary", lines=10),
        gr.JSON(label="PICO Elements")
    ],
    title="Medical PDF Summarizer and PICO Extractor",
    description="ارفع ملف PDF طبي وراح نلخصه ونستخرج عناصر PICO.",
    allow_flagging="never"  # لمنع استخدام العلم (flagging) على الواجهة
)

# تشغيل الواجهة مع رابط مشاركة في Google Colab
interface.launch(share=True)

pip install gradio

import fitz  # PyMuPDF
import spacy
from transformers import pipeline
import gradio as gr

# تحميل Spacy
try:
    nlp = spacy.load("en_core_web_sm")
except Exception as e:
    print("Error loading Spacy model:", e)
    nlp = None

# تحميل موديل التلخيص
try:
    summarizer = pipeline("summarization", model="t5-large")
except Exception as e:
    print("Error loading T5 model:", e)
    summarizer = None

# دالة التلخيص
def summarize_text(text, max_length=150):
    if not summarizer:
        return "Error: Summarizer model is not loaded."

    words = text.split()
    chunks = [" ".join(words[i:i + 512]) for i in range(0, len(words), 512)]
    summaries = [summarizer(chunk, max_length=max_length, min_length=50, do_sample=False)[0]['summary_text'] for chunk in chunks]
    return " ".join(summaries)

# دالة استخراج PICO
def extract_pico_highlights(text):
    if not nlp:
        return "Error: Spacy model is not loaded."

    text = text.replace('\n', ' ')
    doc = nlp(text)
    sentences = [sent.text.strip() for sent in doc.sents if len(sent.text.strip()) > 40]

    pico = {"Participants": [], "Intervention": [], "Comparison": [], "Outcome": []}
    for sentence in sentences:
        sent_lower = sentence.lower()
        if any(w in sent_lower for w in ["participants", "patients", "subjects"]):
            pico["Participants"].append(sentence)
        elif any(w in sent_lower for w in ["intervention", "treatment", "therapy", "method"]):
            pico["Intervention"].append(sentence)
        elif any(w in sent_lower for w in ["comparison", "control", "versus", "placebo"]):
            pico["Comparison"].append(sentence)
        elif any(w in sent_lower for w in ["outcome", "result", "effectiveness", "impact"]):
            pico["Outcome"].append(sentence)

    return pico

# قراءة النص من PDF باستخدام المسار
def process_pdf(file_obj):
    try:
        doc = fitz.open(file_obj.name)
        return "\n".join([page.get_text("text") for page in doc])
    except Exception as e:
        print(f"Error reading PDF: {e}")
        return ""

# الدالة الأساسية
def summarize_and_extract(pdf_file):
    try:
        pdf_text = process_pdf(pdf_file)
        if not pdf_text:
            return "Error: Unable to extract text from PDF.", {}

        summary = summarize_text(pdf_text)
        pico = extract_pico_highlights(pdf_text)
        return summary, pico
    except Exception as e:
        import traceback
        traceback.print_exc()
        return f"Error: {str(e)}", {}

# Gradio UI
interface = gr.Interface(
    fn=summarize_and_extract,
    inputs=gr.File(label="Upload PDF File"),
    outputs=[
        gr.Textbox(label="Summary", lines=10),
        gr.JSON(label="PICO Elements")
    ],
    title="Medical PDF Summarizer and PICO Extractor",
    description="ارفع ملف PDF طبي وراح نلخصه ونستخرج عناصر PICO.",
    allow_flagging="never"  # لمنع استخدام العلم (flagging) على الواجهة
)

# تشغيل الواجهة مع رابط مشاركة في Google Colab
interface.launch(share=True)

pip install PyMuPDF

pip install --upgrade pymupdf